# -*- coding: utf-8 -*-
"""PCA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kDP9Sq0raxBOSscsEShLw-Zl5BJXwBmx
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""Taking an example of the breast cancer dataset owing to its many features"""

from sklearn.datasets import load_breast_cancer

cancer = load_breast_cancer()

"""cancer is a dictionary """

type(cancer)

cancer.keys()

df = pd.DataFrame(cancer["data"],columns=cancer["feature_names"])

df.head()

"""### 1. Standard Normalisation is important before dimensionality reduction"""

from sklearn.preprocessing import StandardScaler

ss = StandardScaler()

ss.fit(df)

df_scaled = ss.transform(df,copy = True)

df_scaled = pd.DataFrame(df_scaled,columns = cancer["feature_names"])

df_scaled.head()



"""###PCA"""

from sklearn.decomposition import PCA

pca = PCA(n_components=2)

pca.fit(df_scaled)

df_pca = pca.transform(df_scaled)

df_pca.shape

"""The dimension has been reduced from 30 to 2

###Visualising to check whether the dataset after PCA is seperable or not
"""

plt.figure(figsize=(10,6))
plt.scatter(df_pca[:,0],df_pca[:,1],c = cancer["target"],cmap = "plasma")
plt.xlabel("First PC")
plt.ylabel("Second PC")

"""Great it can be observed that 2 dims after PCA give a linearly seperable boundary """

